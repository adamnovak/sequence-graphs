// SKETCH of a POSSIBLE API for accessing a sequence graph
@namespace("edu.ucsc.genome")
protocol SequenceGraphAPI {
    
    import idl "../sequencegraph.avdl";
    
    // Defines an RPC protocol that provides access to a Sequence Graph.
    // Designed with helpful advice from the Google people.
    
    // We want to have just flat lists of things that can be any of these types.
    // Unfortunately we can't just name a union, so we use a named wrapper.
    record GraphElement {
        union {Side, AlleleGroup, Adjacency, Anchor} element;
    }
    
    // We want to be able to send a paginated, super-large set of graph elements
    record GraphElementResponse {
        // We have a list of elements in the graph
        array<GraphElement> elements;
        // We don't send the total since that's potentially very expensive to
        // compute with Spark. Instead we send a page count.
        int pagesLeft;
        // And a string to get the next page, or "" if there is no next page.
        string nextPageToken;
    }
    
    // Generic error thrown when the client misbehaves.
    error BadRequestError {
    }
    
    // This is how you get the next page.
    GraphElementResponse getNextPage(string nextPageToken) 
        throws BadRequestError;
    
    // Now the only actual method: request a range of a SequenceGraph.
    GraphElementResponse search(string contig, long start, long end) 
        throws BadRequestError;
    
    
    
}
